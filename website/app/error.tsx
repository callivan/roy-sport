'use client';

import { ButtonContained } from '@shared/ui';
import classNames from 'classnames';

export default function Error({ reset }: { reset: () => void }) {
  const errorText = [
    '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É! ü§≠',
    '–í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –∫–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É! üòÖ',
    '–ï—Å–ª–∏ –ø–∞—Ä—É —Ä–∞–∑ –∫–ª–∏–∫–Ω—É—Ç—å, —Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ—á–∏–Ω–∏—Ç—Å—è! üòï',
    '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –µ—Å–ª–∏ –∫–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É, —Ç–æ –≤—Å–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç!? ü•±',
  ];

  const getRandomString = (arrString: string[]) => {
    return arrString[Math.floor(Math.random() * arrString.length)];
  };

  return (
    <main
      className={classNames(
        // Position
        'relative',

        // Grid
        'col-span-2 row-start-2 row-end-4',

        // Color
        'bg-white-900',

        // Flex
        'flex flex-col gap-3 items-center justify-center',

        // Layer
        'z-[-1]',

        // Indent
        'px-2 py-3',
      )}
    >
      <h2
        className={classNames(
          // Font
          'font-medium text-h2 text-center break-words whitespace-pre-wrap',

          // Color
          'text-pink-450',
        )}
      >
        –£–ø—Å! –û—à–∏–±–æ—á–∫–∞! ü§î
      </h2>

      <span
        className={classNames(
          // Font
          'font-regular text-body1 text-center break-words whitespace-pre-wrap',

          // Color
          'text-black-900',

          // Size
          'max-w-[700px]',
        )}
      >
        –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ú–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ –∏–ª–∏ –∑–∞–π—Ç–∏ –ø–æ–∑–∂–µ.
      </span>

      <span
        className={classNames(
          // Font
          'font-medium text-body1 text-center break-words whitespace-pre-wrap',

          // Color
          'text-purple-450',

          // Size
          'max-w-[700px]',
        )}
      >
        {getRandomString(errorText)}
      </span>

      <ButtonContained
        onClick={() => {
          reset();
        }}
      >
        –ò—Å–ø—Ä–∞–≤–∏—Ç—å
      </ButtonContained>
    </main>
  );
}
