version: 1.0.0

services:
  website:
    container_name: website
    build:
      context: ../website
      dockerfile: ../docker/Dockerfile.website.${MODE:-dev}
    ports:
      - 3000:3000
    volumes:
      - ../website:/app
      - /app/node_modules
    environment:
      - STRAPI_URL=${STRAPI_URL}
      - STRAPI_CONTAINER=${STRAPI_CONTAINER}
      - STRAPI_TOKEN=${STRAPI_TOKEN}
    networks:
      - strapi
    depends_on:
      - cms
  cms:
    container_name: cms
    restart: unless-stopped
    build:
      context: ../cms
      dockerfile: ../docker/Dockerfile.cms.${MODE:-dev}
    ports:
      - 1337:1337
    volumes:
      - ../cms:/app
      - /app/node_modules
      - media:/app/public/uploads
    environment:
      - HOST=${HOST}
      - PORT=${PORT}
      - APP_KEYS=${APP_KEYS}
      - API_TOKEN_SALT=${API_TOKEN_SALT}
      - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}
      - TRANSFER_TOKEN_SALT=${TRANSFER_TOKEN_SALT}
      - STRAPI_URL=${STRAPI_URL}
      - DATABASE_CLIENT=${DATABASE_CLIENT}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_NAME=${DATABASE_NAME}
    networks:
      - strapi
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_DB=${DATABASE_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - strapi

volumes:
  db:
  media:

networks:
  strapi:
    name: strapi
    driver: bridge